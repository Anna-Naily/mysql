-- 1) Создайте таблицу logs типа Archive. Пусть при каждом создании записи в таблицах users, catalogs и products в таблицу logs помещается время и дата создания записи, 
название таблицы, идентификатор первичного ключа и содержимое поля name.


USE shop;
-- создание таблицы logs
DROP table logs IF EXISTS;
CREATE TABLE logs (
name VARCHAR(255),
created_at DATETIME
) ENGINE = Archive;
SELECT * FROM logs;

-- Триггер для users

DELIMITER //
CREATE TRIGGER create_row_users AFTER INSERT ON users 
FOR EACH ROW
BEGIN
 INSERT INTO
  logs (name, created_at)
VALUES
  ('users', NOW());
END//

-- Триггер для catalogs
CREATE TRIGGER create_row_catalogs AFTER INSERT ON  catalogs
FOR EACH ROW
BEGIN
 INSERT INTO
  logs (name, created_at)
VALUES
  ('catalogs', NOW());
END//

-- Триггер для products
CREATE TRIGGER create_row_products AFTER INSERT ON products 
FOR EACH ROW
BEGIN
 INSERT INTO
  logs (name, created_at)
VALUES
  ('products', NOW());
END//
DELIMITER ;


-- Проверка

INSERT INTO
  users (name, birthday_at, created_at, updated_at)
VALUES
  ('Геннадий', '1990-10-05', NULL, NULL);
 
INSERT INTO products
  (name, description, price, catalog_id)
VALUES
  ('Intel Core i3-8100', 'Процессор для настольных персональных компьютеров, основанных на платформе Intel.', 7890.00, 1);
 
 INSERT INTO catalogs
 VALUES
  (NULL, 'Тест2');
 
 SELECT * FROM logs;



-- 2) (по желанию) Создайте SQL-запрос, который помещает в таблицу users миллион записей.

DELIMITER //
CREATE PROCEDURE dowhile()
BEGIN
  DECLARE i INT DEFAULT 0;
  WHILE i < 1000000 DO
    INSERT users
    (name, birthday_at, created_at, updated_at)
    VALUES
     ('Геннадий', '1990-10-05', NULL, NULL);
    SET i = i + 1;
  END WHILE;
END//
DELIMITER ;


-- проверка
CALL dowhile();
SELECT * FROM users;

-- удаление лишних строк
DELETE FROM users WHERE id > 10;